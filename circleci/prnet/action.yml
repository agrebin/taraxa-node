name: 'Trigger Circleci pipelines '
description: 'Triggers circleci pr nets'
inputs:
  action:  # id of input
    description: 'Pipeline parameter to pass to circleci'
    required: true
  pull_request_url:
    description: 'Url for the pull request triggered the action'
    required: true
  circleci_slug:
    description: 'Slug for the circleci pipeline to trigger'
    required: true
outputs:
  status:
    description: "Api call status"
    value: ${{ steps.random-number-generator.outputs.status }}
runs:
  using: "composite"
  steps:
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ inputs.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
          echo "::set-output name=number::${{ fromJson(steps.request.outputs.data). }}"
      - run: |
            curl -u ${{ secrets.CIRCLE_TOKEN }}: -X  POST \
               -H 'Content-Type: application/json' \
               -H 'Accept: application/json' \
               -d "{\"branch\":\"${{ steps.pr_data.outputs.branch }}\", \
                    \"parameters\": { \
                       \"${{ inputs.action }}\": true , \
                       \"pr_number\": \"${{ github.event.issue.number }}\"
                       } \
                   }" \
               https://circleci.com/api/v2/project/${{ inputs.circleci_slug }}/pipeline
